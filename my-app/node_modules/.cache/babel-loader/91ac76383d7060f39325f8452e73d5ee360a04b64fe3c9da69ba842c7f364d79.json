{"ast":null,"code":"var _jsxFileName = \"/Users/melisafarcasanu/Desktop/Programarea aplicatiilor web/AplicatieLicitatie/my-app/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport login from \"./Login.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // // React States\n  // const [errorMessages, setErrorMessages] = useState({});\n  // const [isSubmitted, setIsSubmitted] = useState(false);\n  //\n  // // User Login info\n  // const database = [\n  //   {\n  //     username: \"user1\",\n  //     password: \"pass1\"\n  //   },\n  //   {\n  //     username: \"user2\",\n  //     password: \"pass2\"\n  //   }\n  // ];\n  //\n  // const errors = {\n  //   uname: \"invalid username\",\n  //   pass: \"invalid password\"\n  // };\n  //\n  // const handleSubmit = (event) => {\n  //   //Prevent page reload\n  //   event.preventDefault();\n  //\n  //   var { uname, pass } = document.forms[0];\n  //\n  //   // Find user login info\n  //   const userData = database.find((user) => user.username === uname.value);\n  //\n  //   // Compare user info\n  //   if (userData) {\n  //     if (userData.password !== pass.value) {\n  //       // Invalid password\n  //       setErrorMessages({ name: \"pass\", message: errors.pass });\n  //     } else {\n  //       setIsSubmitted(true);\n  //     }\n  //   } else {\n  //     // Username not found\n  //     setErrorMessages({ name: \"uname\", message: errors.uname });\n  //   }\n  // };\n  //\n  // // Generate JSX code for error message\n  // const renderErrorMessage = (name) =>\n  //     name === errorMessages.name && (\n  //         <div className=\"error\">{errorMessages.message}</div>\n  //     );\n  //\n  // // JSX code for login form\n  // const renderForm = (\n  //     <div className=\"form\">\n  //       <form onSubmit={handleSubmit}>\n  //         <div className=\"input-container\">\n  //           <label>Username </label>\n  //           <input type=\"text\" name=\"uname\" required />\n  //           {renderErrorMessage(\"uname\")}\n  //         </div>\n  //         <div className=\"input-container\">\n  //           <label>Password </label>\n  //           <input type=\"password\" name=\"pass\" required />\n  //           {renderErrorMessage(\"pass\")}\n  //         </div>\n  //         <div className=\"button-container\">\n  //           <button type=\"buton\">Log in</button>\n  //         </div>\n  //       </form>\n  //       <form onSubmit ={handleSubmit}>\n  //         <div className=\"input-container\">\n  //           <label>email </label>\n  //           <input type=\"text\" name=\"uname\" required />\n  //           {renderErrorMessage(\"uname\")}\n  //         </div>\n  //         <div className=\"input-container\">\n  //           <label>Name</label>\n  //           <input type=\"password\" name=\"pass\" required />\n  //           {renderErrorMessage(\"pass\")}\n  //         </div>\n  //         <div className=\"input-container\">\n  //           <label>Password </label>\n  //           <input type=\"text\" name=\"uname\" required />\n  //           {renderErrorMessage(\"uname\")}\n  //         </div>\n  //         <div className=\"button-container\">\n  //           <button type=\"buton\">Register</button>\n  //         </div>\n  //       </form>\n  //     </div>\n  // );\n  //\n  // return (\n  //     <div className=\"app\">\n  //       <div className=\"login-form\">\n  //         <div className=\"title\">Sign In</div>\n  //         {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n  //       </div>\n  //     </div>\n  // );\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","login","App"],"sources":["/Users/melisafarcasanu/Desktop/Programarea aplicatiilor web/AplicatieLicitatie/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport login from \"./Login.js\";\n\nfunction App() {\n  // // React States\n  // const [errorMessages, setErrorMessages] = useState({});\n  // const [isSubmitted, setIsSubmitted] = useState(false);\n  //\n  // // User Login info\n  // const database = [\n  //   {\n  //     username: \"user1\",\n  //     password: \"pass1\"\n  //   },\n  //   {\n  //     username: \"user2\",\n  //     password: \"pass2\"\n  //   }\n  // ];\n  //\n  // const errors = {\n  //   uname: \"invalid username\",\n  //   pass: \"invalid password\"\n  // };\n  //\n  // const handleSubmit = (event) => {\n  //   //Prevent page reload\n  //   event.preventDefault();\n  //\n  //   var { uname, pass } = document.forms[0];\n  //\n  //   // Find user login info\n  //   const userData = database.find((user) => user.username === uname.value);\n  //\n  //   // Compare user info\n  //   if (userData) {\n  //     if (userData.password !== pass.value) {\n  //       // Invalid password\n  //       setErrorMessages({ name: \"pass\", message: errors.pass });\n  //     } else {\n  //       setIsSubmitted(true);\n  //     }\n  //   } else {\n  //     // Username not found\n  //     setErrorMessages({ name: \"uname\", message: errors.uname });\n  //   }\n  // };\n  //\n  // // Generate JSX code for error message\n  // const renderErrorMessage = (name) =>\n  //     name === errorMessages.name && (\n  //         <div className=\"error\">{errorMessages.message}</div>\n  //     );\n  //\n  // // JSX code for login form\n  // const renderForm = (\n  //     <div className=\"form\">\n  //       <form onSubmit={handleSubmit}>\n  //         <div className=\"input-container\">\n  //           <label>Username </label>\n  //           <input type=\"text\" name=\"uname\" required />\n  //           {renderErrorMessage(\"uname\")}\n  //         </div>\n  //         <div className=\"input-container\">\n  //           <label>Password </label>\n  //           <input type=\"password\" name=\"pass\" required />\n  //           {renderErrorMessage(\"pass\")}\n  //         </div>\n  //         <div className=\"button-container\">\n  //           <button type=\"buton\">Log in</button>\n  //         </div>\n  //       </form>\n  //       <form onSubmit ={handleSubmit}>\n  //         <div className=\"input-container\">\n  //           <label>email </label>\n  //           <input type=\"text\" name=\"uname\" required />\n  //           {renderErrorMessage(\"uname\")}\n  //         </div>\n  //         <div className=\"input-container\">\n  //           <label>Name</label>\n  //           <input type=\"password\" name=\"pass\" required />\n  //           {renderErrorMessage(\"pass\")}\n  //         </div>\n  //         <div className=\"input-container\">\n  //           <label>Password </label>\n  //           <input type=\"text\" name=\"uname\" required />\n  //           {renderErrorMessage(\"uname\")}\n  //         </div>\n  //         <div className=\"button-container\">\n  //           <button type=\"buton\">Register</button>\n  //         </div>\n  //       </form>\n  //     </div>\n  // );\n  //\n  // return (\n  //     <div className=\"app\">\n  //       <div className=\"login-form\">\n  //         <div className=\"title\">Sign In</div>\n  //         {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n  //       </div>\n  //     </div>\n  // );\n  <div className=\"app\">\n    <Login></Login>\n  </div>\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,YAAY;AAAC;AAE/B,SAASC,GAAG,GAAG;EACbuBAClB,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACX;AACR;AAAC,KAvGQA,GAAG;AAyGZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}