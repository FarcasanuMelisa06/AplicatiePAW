{"ast":null,"code":"var _jsxFileName = \"/Users/melisafarcasanu/Desktop/Programarea aplicatiilor web/AplicatieLicitatie/my-app/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport Register from \"Register.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // // React States\n  // const [errorMessages, setErrorMessages] = useState({});\n  // const [isSubmitted, setIsSubmitted] = useState(false);\n  //\n  // // User Login info\n  // const database = [\n  //     {\n  //         username: \"user1\",\n  //         password: \"pass1\"\n  //     },\n  //     {\n  //         username: \"user2\",\n  //         password: \"pass2\"\n  //     }\n  // ];\n  //\n  // const errors = {\n  //     uname: \"invalid username\",\n  //     pass: \"invalid password\"\n  // };\n  //\n  // const handleSubmit = (event) => {\n  //     //Prevent page reload\n  //     event.preventDefault();\n  //\n  //     var { uname, pass } = document.forms[0];\n  //\n  //     // Find user login info\n  //     const userData = database.find((user) => user.username === uname.value);\n  //\n  //     // Compare user info\n  //     if (userData) {\n  //         if (userData.password !== pass.value) {\n  //             // Invalid password\n  //             setErrorMessages({ name: \"pass\", message: errors.pass });\n  //         } else {\n  //             setIsSubmitted(true);\n  //         }\n  //     } else {\n  //         // Username not found\n  //         setErrorMessages({ name: \"uname\", message: errors.uname });\n  //     }\n  // };\n  //\n  // // Generate JSX code for error message\n  // const renderErrorMessage = (name) =>\n  //     name === errorMessages.name && (\n  //         <div className=\"error\">{errorMessages.message}</div>\n  //     );\n  //\n  // // JSX code for login form\n  // const renderForm = (\n  //     <div className=\"form\">\n  //         <form onSubmit={handleSubmit}>\n  //             <div className=\"Username\">\n  //                 <label>Username </label>\n  //                 <input\n  //                     type=\"text\"\n  //                     name=\"uname\"\n  //                     required />\n  //                 {renderErrorMessage(\"uname\")}\n  //             </div>\n  //             <div className=\"Password\">\n  //                 <label>Password </label>\n  //                 <input\n  //                     type=\"password\"\n  //                     name=\"pass\"\n  //                     required />\n  //                 {renderErrorMessage(\"pass\")}\n  //             </div>\n  //             <div className=\"button-container\">\n  //                 <button type=\"buton\">Log in</button>\n  //                 <br/>\n  //                 <button type=\"button\">Create an account</button>\n  //                 <br/>\n  //                 <button type=\"button\">Guest</button>\n  //             </div>\n  //\n  //         </form>\n  //\n  //\n  //     </div>\n  // );\n  //\n  // return (\n  //     <div className=\"app\">\n  //         <div className=\"login-form\">\n  //             <div className=\"title\">Numele Aplicatiei</div>\n  //             {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n  //         </div>\n  //     </div>\n  // );\n  /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","Register","App"],"sources":["/Users/melisafarcasanu/Desktop/Programarea aplicatiilor web/AplicatieLicitatie/my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport Register from \"Register.tsx\";\n\nfunction App() {\n    // // React States\n    // const [errorMessages, setErrorMessages] = useState({});\n    // const [isSubmitted, setIsSubmitted] = useState(false);\n    //\n    // // User Login info\n    // const database = [\n    //     {\n    //         username: \"user1\",\n    //         password: \"pass1\"\n    //     },\n    //     {\n    //         username: \"user2\",\n    //         password: \"pass2\"\n    //     }\n    // ];\n    //\n    // const errors = {\n    //     uname: \"invalid username\",\n    //     pass: \"invalid password\"\n    // };\n    //\n    // const handleSubmit = (event) => {\n    //     //Prevent page reload\n    //     event.preventDefault();\n    //\n    //     var { uname, pass } = document.forms[0];\n    //\n    //     // Find user login info\n    //     const userData = database.find((user) => user.username === uname.value);\n    //\n    //     // Compare user info\n    //     if (userData) {\n    //         if (userData.password !== pass.value) {\n    //             // Invalid password\n    //             setErrorMessages({ name: \"pass\", message: errors.pass });\n    //         } else {\n    //             setIsSubmitted(true);\n    //         }\n    //     } else {\n    //         // Username not found\n    //         setErrorMessages({ name: \"uname\", message: errors.uname });\n    //     }\n    // };\n    //\n    // // Generate JSX code for error message\n    // const renderErrorMessage = (name) =>\n    //     name === errorMessages.name && (\n    //         <div className=\"error\">{errorMessages.message}</div>\n    //     );\n    //\n    // // JSX code for login form\n    // const renderForm = (\n    //     <div className=\"form\">\n    //         <form onSubmit={handleSubmit}>\n    //             <div className=\"Username\">\n    //                 <label>Username </label>\n    //                 <input\n    //                     type=\"text\"\n    //                     name=\"uname\"\n    //                     required />\n    //                 {renderErrorMessage(\"uname\")}\n    //             </div>\n    //             <div className=\"Password\">\n    //                 <label>Password </label>\n    //                 <input\n    //                     type=\"password\"\n    //                     name=\"pass\"\n    //                     required />\n    //                 {renderErrorMessage(\"pass\")}\n    //             </div>\n    //             <div className=\"button-container\">\n    //                 <button type=\"buton\">Log in</button>\n    //                 <br/>\n    //                 <button type=\"button\">Create an account</button>\n    //                 <br/>\n    //                 <button type=\"button\">Guest</button>\n    //             </div>\n    //\n    //         </form>\n    //\n    //\n    //     </div>\n    // );\n    //\n    // return (\n    //     <div className=\"app\">\n    //         <div className=\"login-form\">\n    //             <div className=\"title\">Numele Aplicatiei</div>\n    //             {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n    //         </div>\n    //     </div>\n    // );\n    <Register></Register>\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,cAAc;AAAC;AAEpC,SAASC,GAAG,GAAG;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,qBAAC,QAAQ;IAAA;IAAA;IAAA;EAAA,QAAY;AACzB;AAAC,KA9FQA,GAAG;AAgGZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}